# Dockerfile for icn-covm-v3 (ICN Runtime)

# Build Stage
FROM rust:1.81-slim-bullseye as builder

WORKDIR /usr/src/app

# Install necessary build dependencies (e.g., openssl, pkg-config)
RUN apt-get update && apt-get install -y --no-install-recommends \
    pkg-config libssl-dev build-essential

# Copy the entire project context
COPY . .

# Build the release binary for the CLI
RUN cargo build --release --bin covm

# Runtime Stage
FROM debian:bullseye-slim as runtime

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates libssl1.1 curl bash && \
    rm -rf /var/lib/apt/lists/*

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/scripts /app/config

# Copy the compiled binary
COPY --from=builder /usr/src/app/target/release/covm /usr/local/bin/covm

# Copy scripts and make executable
COPY ./bin/run_integration_node.sh /app/scripts/
COPY ./bin/monitor_integration.sh /app/scripts/
COPY ./tests/reset_icn_state.sh /app/scripts/ # Assuming reset script is in tests
RUN chmod +x /app/scripts/*.sh

# Copy config directory
COPY ./config /app/config

# Set working directory
WORKDIR /app

# Expose necessary ports
EXPOSE 8080 # HTTP API
EXPOSE 8090 # WebSocket Events
EXPOSE 4001 # libp2p TCP

# Define the default command to run the integration script
# It expects the integration config file to exist
CMD ["/app/scripts/run_integration_node.sh"]
