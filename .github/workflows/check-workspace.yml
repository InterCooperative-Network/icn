name: Workspace Integrity Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  check-workspace:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Check for duplicate crate names
        run: |
          # Extract all package names
          PACKAGES=$(find . -name Cargo.toml -type f -exec grep -l "^name\s*=" {} \; | xargs grep "^name\s*=" | sed 's/.*name\s*=\s*"\([^"]*\)".*/\1/' | sort)
          
          # Check for duplicates
          DUPLICATES=$(echo "$PACKAGES" | sort | uniq -d)
          
          if [ -n "$DUPLICATES" ]; then
            echo "Error: Found duplicate crate names:"
            echo "$DUPLICATES"
            exit 1
          else
            echo "No duplicate crate names found."
          fi
      
      - name: Enhanced check for potential duplicate crates (different names but same purpose)
        run: |
          # Define patterns for similar crates
          PATTERNS=("wallet-" "icn-wallet")
          
          for PATTERN in "${PATTERNS[@]}"; do
            echo "Checking for potential duplicates with pattern '$PATTERN'..."
            MATCHES=$(find . -name Cargo.toml -type f -exec grep -l "name\s*=\s*\".*$PATTERN" {} \; | sort)
            
            if [ -n "$MATCHES" ]; then
              MATCH_COUNT=$(echo "$MATCHES" | wc -l)
              
              if [ "$MATCH_COUNT" -gt 1 ]; then
                echo "Error: Found multiple crates matching pattern '$PATTERN':"
                echo "$MATCHES"
                echo "These are likely duplicate implementations that should be consolidated."
                exit 1
              fi
            fi
          done
      
      - name: Check for nested workspaces
        run: |
          ROOT_WORKSPACE=$(grep -l "^\[workspace\]" Cargo.toml)
          NESTED_WORKSPACES=$(find . -not -path "./target/*" -not -path "./$ROOT_WORKSPACE" -name Cargo.toml -type f -exec grep -l "^\[workspace\]" {} \;)
          
          if [ -n "$NESTED_WORKSPACES" ]; then
            echo "Error: Found nested workspace definitions which cause build issues:"
            echo "$NESTED_WORKSPACES"
            echo "All workspaces must be consolidated into the root Cargo.toml."
            exit 1
          else
            echo "No nested workspaces found."
          fi
      
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --all-targets
      
      - name: Install cargo-deny
        run: cargo install cargo-deny --locked
      
      - name: Run cargo-deny
        run: cargo deny check licenses sources

      - name: Install cargo-audit
        run: cargo install cargo-audit --locked
      
      - name: Run cargo-audit
        run: cargo audit
      
      - name: Install cargo-hack
        run: cargo install cargo-hack --locked
      
      - name: Check all feature combinations
        run: cargo hack check --each-feature --no-dev-deps --workspace 