version: '3.8'

services:
  # Database for AgoraNet
  postgres:
    image: postgres:16-alpine
    container_name: icn-postgres
    environment:
      - POSTGRES_USER=icn
      - POSTGRES_PASSWORD=icnpass
      - POSTGRES_DB=agoranet
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U icn"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Single federation node for development
  federation-node:
    image: icn-runtime:latest
    build:
      context: ../..
      dockerfile: icn-runtime-root/devnet/Dockerfile
    container_name: icn-federation-node
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Starting ICN development node...' &&
        sleep 5 &&
        icn-runtime --dev --with-rpc --data-dir=/data/node
      "
    ports:
      - "9000:9000"  # API port
      - "9090:9090"  # Metrics port
    volumes:
      - ./config:/config
      - ./data/node:/data
    environment:
      - ICN_LOG=info
      - ICN_DB_URL=postgres://icn:icnpass@postgres:5432/agoranet
      - ICN_STORAGE_DIR=/data/storage
      - ICN_METRICS=true
    networks:
      - icn-network

  # Prometheus for metrics collection (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: icn-prometheus
    ports:
      - "9200:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - icn-network
    depends_on:
      - federation-node

networks:
  icn-network:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data: 