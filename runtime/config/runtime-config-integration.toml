[runtime]
node_id = "icn-runtime-mainnode"
mode = "validator"
data_dir = "./data"
max_memory_mib = 4096

[identity]
did = "did:icn:node:mainnode1"
key_file = "./keys/node-key.pem"

[resources]
max_cpu_percent = 80
max_storage_gb = 50
max_concurrent_vms = 8
vm_memory_limit_mib = 256
vm_execution_timeout_sec = 30
vm_execution_rate_limit = 120

[network]
# HTTP API for interacting with AgoraNet and Wallet
http_listen = "0.0.0.0:8080"
http_tls_enabled = false  # Enable for production with proper certs

# Federation P2P settings for Wallet SyncClient
p2p_listen = ["/ip4/0.0.0.0/tcp/4001"]
external_addresses = ["/ip4/127.0.0.1/tcp/4001"]  # Update with actual public IP or DNS

# Enable metrics for monitoring
metrics_enabled = true
metrics_listen = "127.0.0.1:9090"

# WebSocket endpoint for event streaming to AgoraNet
events_websocket_enabled = true
events_websocket_listen = "0.0.0.0:8090"

[storage]
backend = "filesystem"
base_dir = "./data/storage"
max_size_gb = 50
gc_interval_sec = 3600

[federation]
# Frequent sync intervals for responsive TrustBundle synchronization
bootstrap_period_sec = 15
peer_sync_interval_sec = 30
trust_bundle_sync_interval_sec = 60
max_peers = 25

# Add bootstrap peers if connecting to existing federation
# bootstrap_peers = [
#   "/ip4/10.0.0.1/tcp/4001/p2p/QmNode1",
#   "/ip4/10.0.0.2/tcp/4001/p2p/QmNode2"
# ]

# Content replication settings
default_replication_factor = 3

[governance]
# Voting period settings (can be adjusted)
min_voting_period_sec = 3600   # 1 hour for testing
max_voting_period_sec = 86400  # 1 day for testing
quorum_percent = 51
approval_threshold_percent = 51
proposals_rate_limit = 10

[logging]
level = "debug"  # Use debug for integration testing
format = "json"
output = "both"
file_path = "./logs/runtime.log"
max_file_size_mb = 100
max_file_count = 5

[events]
# Configure event emission for AgoraNet integration
emission_method = "websocket"  # Options: websocket, http_push, message_queue
emission_batch_size = 10
emission_interval_ms = 500
retry_attempts = 3
retry_delay_ms = 1000

# AgoraNet webhook URL if using http_push
# agoranet_webhook_url = "http://localhost:3000/api/events"

[security]
sandbox_enabled = true
sandbox_type = "wasm"
access_control_enabled = true 