version: '3'

services:
  # ICN Runtime service
  icn-runtime:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: icn-runtime
    volumes:
      - ./config:/etc/icn-runtime
      - ./data:/var/lib/icn-runtime
      - ./logs:/var/log/icn-runtime
    ports:
      - "8080:8080"  # HTTP API
      - "4001:4001"  # libp2p/Federation
      - "8090:8090"  # WebSocket for events
      - "9090:9090"  # Metrics
    environment:
      - RUST_LOG=debug
      - ICN_CONFIG_FILE=/etc/icn-runtime/runtime-config-integration.toml
    networks:
      - icn-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # AgoraNet service (mock or actual)
  # Uncomment and adjust if you have AgoraNet running in Docker
  agoranet:
    image: agoranet:latest
    container_name: agoranet
    ports:
      - "3000:3000"  # AgoraNet web interface
    environment:
      - NODE_ENV=development
      - EVENT_SOURCE_URL=ws://icn-runtime:8090/events
      - API_URL=http://icn-runtime:8080/api
    networks:
      - icn-network
    depends_on:
      - icn-runtime

  # Wallet service (mock or actual)
  # Uncomment and adjust if you have the Wallet running in Docker
  wallet-agent:
    image: icn-wallet-agent:latest
    container_name: wallet-agent
    environment:
      - ICN_RUNTIME_URL=http://icn-runtime:8080
      - FEDERATION_BOOTSTRAP_PEER=/ip4/icn-runtime/tcp/4001
    ports:
      - "8000:8000"  # Wallet API
    networks:
      - icn-network
    depends_on:
      - icn-runtime

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9091:9090"
    networks:
      - icn-network
    depends_on:
      - icn-runtime

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    networks:
      - icn-network
    depends_on:
      - prometheus

networks:
  icn-network:
    driver: bridge 