# Build stage
FROM rust:1.81-slim-bullseye AS builder

WORKDIR /usr/src/app

# Install build dependencies if needed (e.g., for native libraries)
RUN apt-get update && apt-get install -y --no-install-recommends pkg-config libssl-dev

COPY . .

# Build the release binary for the CLI (which includes the server)
RUN cargo build --release --bin icn-wallet-cli

# Runtime stage
FROM debian:bullseye-slim as runtime

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends ca-certificates curl && \
    rm -rf /var/lib/apt/lists/*

# Copy the compiled binary from the builder stage
COPY --from=builder /usr/src/app/target/release/icn-wallet-cli /usr/local/bin/icn-wallet-cli

# Create default wallet data directory
RUN mkdir -p /app/wallet-data && chown nobody:nogroup /app/wallet-data
USER nobody:nogroup

WORKDIR /app

# Expose API and WebSocket ports (adjust if different)
EXPOSE 3000
EXPOSE 9876

# Default command to run the API server
ENV PORT=3000
ENV AGORANET_URL=""
HEALTHCHECK --interval=10s --timeout=3s --retries=3 \
  CMD curl --fail http://localhost:${PORT}/health || exit 1

CMD icn-wallet-cli serve --host 0.0.0.0 --port ${PORT} --agoranet-url "${AGORANET_URL}" --data-dir /app/wallet-data
